
.sorting
  .visual

  .facts
    .x-axis 
    .x-axis 20%
    .x-axis 40%
    .x-axis 60%
    .x-axis 80%
    .init-list Initial list: <span></span>
    .total-steps Logged <span></span> steps.
    .current-array

  .controls
    .btn-group.algorithm.hidden-phone(data-toggle="buttons-radio")
      a.btn.active bubblesort
      a.btn heapsort
      a.btn insertionsort
      a.btn selectionsort
      a.btn quicksort
    .visible-phone.algorithm
      select
        option bubblesort
        option heapsort
        option insertionsort
        option selectionsort
        option quicksort

.about
  :markdown
    ## Sorting Visualizations
    Inspired by [sortvis.org](http://sortvis.org), these visualizations create an interesting way to view various sorting
    algorithms at work. For instance, you can compare the calm swapping of bubblesort with the mass confusion beginning of 
    the heapsort algorithm. Each algorithm saves a snapshot of the list during their sorting loops and then those logs are 
    shown line by line with SVG graphics.

    Most algorithms were copied from either [sortvis.org](http://sortvis.org) or 
    [Rosetta Code](http://rosettacode.org/wiki/Sorting_algorithms).

    You can view all the coffeescript code on [github](https://github.com/luckyllama/frankhadder.com/blob/master/assets/js/sorting.coffee). 

    _Note: SVG is an advanced html5 feature. I've only tested this page in the lastest version of Chrome and Firefox, IE9, and Safari for iPhone 4._


!= js('sorting')